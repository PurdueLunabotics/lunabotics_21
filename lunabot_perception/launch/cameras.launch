<?xml version="1.0"?>
<launch>
  <arg name="serial_no_d455_back" default="053122251286" />
  <arg name="serial_no_d455_front" default="053122251335" />
  <arg name="initial_reset" default="true" />
  <arg name="sim" default="false" />
  <arg name="width" default="424" />
  <arg name="height" default="240" />
  <arg name="fps" default="30" />
  <arg name="front" default="true" />
  <arg name="back" default="true" />
  <arg name="pointcloud" default="false" />

  <group unless="$(arg sim)">

    <!-- IMU -->
    <node name="imu" pkg="lunabot_perception" type="imu_node" output="screen">
      <param name="imu_frame_id" type="string" value="d455_back" />
      <param name="topic_name" type="string" value="/imu" />
    </node>

    <group ns="d455_front" if="$(arg front)">
      <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="serial_no" value="$(arg serial_no_d455_front)" />
        <arg name="tf_prefix" value="d455_front" />
        <!-- <arg name="filters" value="pointcloud" /> -->
        <arg name="align_depth" value="true" />
        <arg name="initial_reset" value="$(arg initial_reset)" />
        <arg name="depth_width" value="$(arg width)" />
        <arg name="depth_height" value="$(arg height)" />
        <arg name="depth_fps" value="$(arg fps)" />
        <arg name="color_width" value="$(arg width)" />
        <arg name="color_height" value="$(arg height)" />
        <arg name="color_fps" value="$(arg fps)" />
        <arg name="enable_gyro" value="false" />
        <arg name="enable_accel" value="false" />
        <arg name="enable_sync" value="true" />
        <arg name="publish_tf" value="true" />
        <arg name="enable_pointcloud" value="$(arg pointcloud)" />


      </include>



      <group ns="camera/color">
        <node pkg="image_proc" type="image_proc" name="image_proc"
          args="image:=camera/color/image_raw" />
        <include file="$(find lunabot_perception)/launch/apriltag.launch">
          <arg name="camera_frame" value="d455_front_base" />
        </include>
      </group>

      <node pkg="nodelet" type="nodelet" name="point_cloud_xyz" args="standalone rtabmap_util/point_cloud_xyz" output="screen">
        <remap from="depth/image" to="camera/depth/image_rect_raw"/>
        <remap from="depth/camera_info" to="camera/color/camera_info"/>
        <param name="roi_ratios" value="0.0 0.0 0.3 0.0"/>
        <param name="decimation" value="2"/>
        <param name="voxel_size" value="0.05"/>
        <param name="noise_filter_radius" value="0.1"/>
        <param name="max_depth" value="10"/>
        <param name="min_depth" value="0.5"/>
      </node>

      <!-- sync rgb/depth images per camera -->
      <!-- <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_sync/rgbd_sync"
        output="screen">
        <remap from="rgb/image" to="camera/color/image_rect_color" />
        <remap from="depth/image" to="camera/depth/image_rect_raw" />
        <remap from="rgb/camera_info" to="camera/color/camera_info" />
        <param name="approx_sync" value="false" />
      </node> -->
    </group>

    <group ns="d455_back" if="$(arg back)">
      <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="serial_no" value="$(arg serial_no_d455_back)" />
        <arg name="tf_prefix" value="d455_back" />
        <!-- <arg name="filters" value="pointcloud" /> -->
        <arg name="align_depth" value="true" />
        <arg name="initial_reset" value="$(arg initial_reset)" />
        <arg name="depth_width" value="$(arg width)" />
        <arg name="depth_height" value="$(arg height)" />
        <arg name="depth_fps" value="$(arg fps)" />
        <arg name="color_width" value="$(arg width)" />
        <arg name="color_height" value="$(arg height)" />
        <arg name="color_fps" value="$(arg fps)" />
        <arg name="enable_gyro" value="false" />
        <arg name="enable_accel" value="false" />
        <arg name="enable_sync" value="true" />
        <arg name="publish_tf" value="true" />
        <arg name="enable_pointcloud" value="$(arg pointcloud)" />

      </include>

      <group ns="camera/color">
        <node pkg="image_proc" type="image_proc" name="image_proc"
          args="image:=camera/color/image_raw" />
        <include file="$(find lunabot_perception)/launch/apriltag.launch">
          <arg name="camera_frame" value="d455_back_base" />
        </include>
      </group>

      <node pkg="nodelet" type="nodelet" name="point_cloud_xyz" args="standalone rtabmap_util/point_cloud_xyz" output="screen">
        <remap from="depth/image" to="camera/depth/image_rect_raw"/>
        <remap from="depth/camera_info" to="camera/color/camera_info"/>
        <param name="roi_ratios" value="0.0 0.0 0.3 0.0"/>
        <param name="decimation" value="2"/>
        <param name="voxel_size" value="0.05"/>
        <param name="noise_filter_radius" value="0.1"/>
        <param name="max_depth" value="10"/>
        <param name="min_depth" value="0.5"/>      </node>

      <!-- sync rgb/depth images per camera -->
      <!-- <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_sync/rgbd_sync"
        output="screen">
        <remap from="rgb/image" to="camera/color/image_rect_color" />
        <remap from="depth/image" to="camera/depth/image_rect_raw" />
        <remap from="rgb/camera_info" to="camera/color/camera_info" />
        <param name="approx_sync" value="false" />
      </node> -->
    </group>


  </group>

  <group if="$(arg sim)">
    <group ns="d435_forward/color" if="$(arg front)">
      <node pkg="image_proc" type="image_proc" name="image_proc" />
      <include file="$(find lunabot_perception)/launch/apriltag.launch">
        <arg name="camera_frame" value="d435_forward_link" />
      </include>
    </group>

    <group ns="d435_backward/color" if="$(arg back)">
      <node pkg="image_proc" type="image_proc" name="image_proc" />
      <include file="$(find lunabot_perception)/launch/apriltag.launch">
        <arg name="camera_frame" value="d435_backward_link" />
      </include>
    </group>
  </group>
</launch>