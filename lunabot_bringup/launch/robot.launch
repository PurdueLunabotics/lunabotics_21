<?xml version="1.0"?>
<launch>
    <arg name="autonomy" default="false" />
    <arg name="record" default="true" />
    <arg name="teensy" default="true" />
    <arg name="cameras" default="true" />
    <arg name="overhead" default="true" />
    <arg name="slam" default="true" />
    <arg name="exp_name" default="exp" />


    <node if="$(arg teensy)" name="teensy_driver" pkg="lunabot_embedded" type="teensy_driver_node"
        output="screen" />

    <include if="$(arg cameras)" file="$(find lunabot_perception)/launch/cameras.launch" />

    <include if="$(arg overhead)" file="$(find lunabot_bringup)/launch/overhead.launch" />
    <include if="$(arg record)" file="$(find lunabot_bringup)/launch/record.launch">
        <arg name="exp_name" value="$(arg exp_name)" />
    </include>

    <group if="$(arg autonomy)">

        <arg name="strategy" default="1" />
        <arg name="feature" default="6" />
        <arg name="nn" default="3" />
        <arg name="max_depth" default="4.0" />
        <arg name="min_inliers" default="20" />
        <arg name="inlier_distance" default="0.02" />
        <arg name="local_map" default="1000" />
        <arg name="odom_info_data" default="true" />
        <arg name="wait_for_transform" default="true" />


        <group ns="rtabmap">
			<include if="$(arg slam)" file="$(find rtabmap_ros)/launch/rtabmap.launch" >
				<arg name="rtabmap_args" value="--delete_db_on_start"/>
				<arg name="depth_topic" value="/d455_back/camera/aligned_depth_to_color/image_raw"/>
				<arg name="rgb_topic" value="/d455_back/camera/color/image_rect_color"/>
				<arg name="camera_info_topic" value="/d455_back/camera/color/camera_info"/>
				<arg name="rtabmapviz" value="false" />
				<arg name="imu_topic" value="/imu" />
				<arg name="frame_id" value="base_link" />
				<arg name="rviz" value="true"/>
			</include>

			<node pkg="nodelet" ns="front" type="nodelet" name="obstacles_detection" args="load rtabmap_util/obstacles_detection obstacles_manager">
				<remap from="cloud" to="/d455_front/depth/color/points"/>

				<param name="frame_id" type="string" value="base_link"/>
				<param name="wait_for_transform" type="bool" value="true"/>
				<param name="min_cluster_size" type="int" value="20"/>
				<param name="max_obstacles_height" type="double" value="0.0"/>
			</node>

			<node pkg="nodelet" ns="back" type="nodelet" name="obstacles_detection" args="load rtabmap_util/obstacles_detection obstacles_manager">
				<remap from="cloud" to="/d455_back/depth/color/points"/>

				<param name="frame_id" type="string" value="base_link"/>
				<param name="wait_for_transform" type="bool" value="true"/>
				<param name="min_cluster_size" type="int" value="20"/>
				<param name="max_obstacles_height" type="double" value="0.0"/>
			</node>


		</group>

        <node pkg="lunabot_control" type="effort_factory.py" name="effort_factory" output="screen" />

        <node pkg="lunabot_control" type="differential_drive_controller.py"
            name="differential_drive_controller" output="screen" />

        <group ns="nav">
            <node pkg="lunabot_control" type="mpc_node" name="mpc_node" output="screen" />

            <node name="global_planner_node" pkg="lunabot_nav" type="dstar_node.py" output="screen"
                respawn="true">
                <!-- <rosparam file="$(find lunabot_config)/config/rrtstar.yml" command="load"/> -->
            </node>
        </group>

        <group ns="maps">
            <node name="costmap_node" pkg="lunabot_perception" type="costmap_node" output="screen">
                <rosparam file="$(find lunabot_config)/config/global_costmap.yml" command="load"
                    ns="global_costmap" />
            </node>
        </group>

    </group>
</launch>