<?xml version="1.0"?>
<launch>
    <arg name="autonomy" default="false" />
    <arg name="record" default="true" />
    <arg name="teensy" default="true" />
    <arg name="cameras" default="true" />
    <arg name="overhead" default="true" />
    <arg name="slam" default="true" />
    <arg name="exp_name" default="exp" />


    <node if="$(arg teensy)" name="teensy_driver" pkg="lunabot_embedded" type="teensy_driver_node"
        output="screen" />

    <include if="$(arg cameras)" file="$(find lunabot_perception)/launch/cameras.launch" />

    <include if="$(arg overhead)" file="$(find lunabot_bringup)/launch/overhead.launch" />
    <include if="$(arg record)" file="$(find lunabot_bringup)/launch/record.launch">
        <arg name="exp_name" value="$(arg exp_name)" />
    </include>

    <group if="$(arg autonomy)">

        <arg name="strategy" default="1" />
        <arg name="feature" default="6" />
        <arg name="nn" default="3" />
        <arg name="max_depth" default="4.0" />
        <arg name="min_inliers" default="20" />
        <arg name="inlier_distance" default="0.02" />
        <arg name="local_map" default="1000" />
        <arg name="odom_info_data" default="true" />
        <arg name="wait_for_transform" default="false" />

        <node pkg="nodelet" type="nodelet" name="rgbdx_sync"
            args="standalone rtabmap_sync/rgbdx_sync">
            <param name="rgbd_cameras" type="int" value="2" />
            <param name="approx_sync" type="bool" value="true" />


            <remap from="rgbd_image0" to="/d455_back/rgbd_image" />
            <remap from="rgbd_image1" to="/d455_front/rgbd_image" />
        </node>

        <group ns="rtabmap">

            <!-- Odometry -->
            <node pkg="rtabmap_odom" type="rgbd_odometry" name="rgbd_odometry">
                <!-- <remap from="rgbd_image" to="/d455_back/rgbd_image" /> -->
                <!-- <remap from="rgbd_image1" to="/d455_front/rgbd_image" /> -->

                <remap from="rgbd_images" to="rgbd_images" />
                <!-- <param name="subscribe_depth" type='bool' value='true' /> -->
                <param name="subscribe_rgbd" type="bool" value="true" />
                <param name="frame_id" type="string" value="base_link" />
                <param name="rgbd_cameras" type="int" value="0" />
                <param name="wait_for_transform" type="bool" value="$(arg wait_for_transform)" />
                <param name="Odom/Strategy" type="string" value="$(arg strategy)" />
                <param name="OdomF2M/BundleAdjustment" type="string" value="0" /> <!-- should be 0
                for
            multi-cameras -->
                <param name="Vis/EstimationType" type="string" value="0" />
                <param name="Vis/CorGuessWinSize" type="string" value="0" /><!-- should be 0 for
            multi-cameras -->
                <param name="Vis/FeatureType" type="string" value="$(arg feature)" />
                <param name="Vis/CorGuessWinSize" type="string" value="0" />
                <param name="Vis/CorNNType" type="string" value="$(arg nn)" />
                <param name="Vis/MaxDepth" type="string" value="$(arg max_depth)" />
                <param name="Vis/MinInliers" type="string" value="$(arg min_inliers)" />
                <param name="Vis/InlierDistance" type="string" value="$(arg inlier_distance)" />
                <param name="OdomF2M/MaxSize" type="string" value="$(arg local_map)" />
                <param name="Odom/FillInfoData" type="string" value="$(arg odom_info_data)" />
            </node>


            <node if="$(arg slam)" name="rtabmap" pkg="rtabmap_slam" type="rtabmap"
                args="--delete_db_on_start">

                <param name="frame_id" type="string" value="base_link" />
                <param name="Grid/Sensor"
                    type="string" value="1" />
                <param name="Grid/RangeMax" type="string" value="0" />

                <param
                    name="gen_scan" type="bool" value="false" />
                <param name="wait_for_transform"
                    type="bool" value="false" />
                <param name="subscribe_rgbd" type="bool"
                    value='true' />
                <param name="subscribe_depth" type="bool" value='false' />
                <param
                    name="rgbd_cameras" type="int" value="0" />x <param
                    name="map_negative_poses_ignored" type="bool" value="false" />
                <!-- refresh grid map even if we are not moving-->
                <param
                    name="map_negative_scan_empty_ray_tracing" type="bool" value="false" />
                <!-- don't fill empty space between the generated scans-->

                <!-- <remap from="rgbd_image0" to="/d455_back/rgbd_image" /> -->
                <!-- <remap from="rgbd_image1" to="/d455_front/rgbd_image" />  -->

                <remap
                    from="rgbd_images" to="rgbd_images" />
                <param name="Vis/EstimationType"
                    type="string" value="0" />

                <!-- should be 0 for multi-cameras -->

            </node>
        </group>

        <node pkg="lunabot_control" type="effort_factory.py" name="effort_factory" output="screen" />

        <node pkg="lunabot_control" type="differential_drive_controller.py"
            name="differential_drive_controller" output="screen" />

        <group ns="nav">
            <node pkg="lunabot_control" type="mpc_node" name="mpc_node" output="screen" />

            <node name="global_planner_node" pkg="lunabot_nav" type="dstar_node.py" output="screen"
                respawn="true">
                <!-- <rosparam file="$(find lunabot_config)/config/rrtstar.yml" command="load"/> -->
            </node>
        </group>

        <group ns="maps">
            <node name="costmap_node" pkg="lunabot_perception" type="costmap_node" output="screen">
                <rosparam file="$(find lunabot_config)/config/global_costmap.yml" command="load"
                    ns="global_costmap" />
            </node>
        </group>

    </group>
</launch>